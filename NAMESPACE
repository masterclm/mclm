# Generated by roxygen2: do not edit by hand

S3method("orig_ranks<-",default)
S3method(`[<-`,fnames)
S3method(`[<-`,freqlist)
S3method(`[<-`,tokens)
S3method(`[<-`,types)
S3method(`[`,fnames)
S3method(`[`,freqlist)
S3method(`[`,tokens)
S3method(`[`,types)
S3method(`orig_ranks<-`,freqlist)
S3method(`tot_n_tokens<-`,freqlist)
S3method(as.character,re)
S3method(as.character,tokens)
S3method(as.data.frame,assoc_scores)
S3method(as.data.frame,conc)
S3method(as.data.frame,details.slma)
S3method(as.data.frame,fnames)
S3method(as.data.frame,freqlist)
S3method(as.data.frame,slma)
S3method(as.data.frame,tokens)
S3method(as.data.frame,types)
S3method(as_character,default)
S3method(as_character,re)
S3method(as_character,tokens)
S3method(as_data_frame,default)
S3method(as_numeric,default)
S3method(details,slma)
S3method(drop_bool,fnames)
S3method(drop_bool,freqlist)
S3method(drop_bool,tokens)
S3method(drop_bool,types)
S3method(drop_pos,fnames)
S3method(drop_pos,freqlist)
S3method(drop_pos,tokens)
S3method(drop_pos,types)
S3method(drop_re,fnames)
S3method(drop_re,freqlist)
S3method(drop_re,tokens)
S3method(drop_re,types)
S3method(drop_types,fnames)
S3method(drop_types,freqlist)
S3method(drop_types,tokens)
S3method(drop_types,types)
S3method(explore,assoc_scores)
S3method(explore,conc)
S3method(explore,fnames)
S3method(explore,freqlist)
S3method(explore,tokens)
S3method(explore,types)
S3method(keep_bool,fnames)
S3method(keep_bool,freqlist)
S3method(keep_bool,tokens)
S3method(keep_bool,types)
S3method(keep_pos,fnames)
S3method(keep_pos,freqlist)
S3method(keep_pos,tokens)
S3method(keep_pos,types)
S3method(keep_re,fnames)
S3method(keep_re,freqlist)
S3method(keep_re,tokens)
S3method(keep_re,types)
S3method(keep_types,fnames)
S3method(keep_types,freqlist)
S3method(keep_types,tokens)
S3method(keep_types,types)
S3method(n_tokens,freqlist)
S3method(n_tokens,tokens)
S3method(n_types,assoc_scores)
S3method(n_types,freqlist)
S3method(n_types,tokens)
S3method(n_types,types)
S3method(orig_ranks,freqlist)
S3method(plot,fnames)
S3method(plot,freqlist)
S3method(plot,re)
S3method(plot,summary.fnames)
S3method(plot,summary.freqlist)
S3method(plot,summary.re)
S3method(plot,summary.types)
S3method(plot,types)
S3method(print,assoc_scores)
S3method(print,conc)
S3method(print,details.slma)
S3method(print,fnames)
S3method(print,freqlist)
S3method(print,re)
S3method(print,slma)
S3method(print,summary.fnames)
S3method(print,summary.freqlist)
S3method(print,summary.re)
S3method(print,summary.tokens)
S3method(print,summary.types)
S3method(print,tokens)
S3method(print,types)
S3method(ranks,freqlist)
S3method(rev,tokens)
S3method(sort,assoc_scores)
S3method(sort,fnames)
S3method(sort,freqlist)
S3method(sort,tokens)
S3method(sort,types)
S3method(summary,fnames)
S3method(summary,freqlist)
S3method(summary,re)
S3method(summary,tokens)
S3method(summary,types)
S3method(tibble::as_tibble,assoc_scores)
S3method(tibble::as_tibble,conc)
S3method(tibble::as_tibble,fnames)
S3method(tibble::as_tibble,freqlist)
S3method(tibble::as_tibble,slma)
S3method(tibble::as_tibble,tokens)
S3method(tibble::as_tibble,types)
S3method(tot_n_tokens,freqlist)
S3method(trunc_at,tokens)
S3method(type_names,assoc_scores)
S3method(type_names,freqlist)
export("orig_ranks<-")
export("perl_flavor<-")
export("tot_n_tokens<-")
export(as.re)
export(as_character)
export(as_conc)
export(as_data_frame)
export(as_fnames)
export(as_freqlist)
export(as_numeric)
export(as_re)
export(as_tokens)
export(as_types)
export(assoc_abcd)
export(assoc_scores)
export(cat_re)
export(chisq1_to_p)
export(cleanup_spaces)
export(col_pcoord)
export(conc)
export(details)
export(drop_bool)
export(drop_empty_rc)
export(drop_extension)
export(drop_fnames)
export(drop_path)
export(drop_pos)
export(drop_re)
export(drop_tags)
export(drop_types)
export(explore)
export(find_xpath)
export(fnames_merge)
export(fnames_merge_all)
export(freqlist)
export(freqlist_diff)
export(freqlist_merge)
export(freqlist_merge_all)
export(get_fnames)
export(import_conc)
export(keep_bool)
export(keep_fnames)
export(keep_pos)
export(keep_re)
export(keep_types)
export(mclm_question)
export(mclm_question_num)
export(mclm_question_text)
export(merge_conc)
export(n_fnames)
export(n_tokens)
export(n_types)
export(orig_ranks)
export(p_to_chisq1)
export(perl_flavor)
export(print_kwic)
export(ranks)
export(re)
export(re_has_matches)
export(re_replace_all)
export(re_replace_first)
export(re_retrieve_all)
export(re_retrieve_first)
export(re_retrieve_last)
export(re_which)
export(read_assoc)
export(read_conc)
export(read_fnames)
export(read_freqlist)
export(read_tokens)
export(read_txt)
export(read_types)
export(row_pcoord)
export(scan_re)
export(scan_re2)
export(scan_txt)
export(scan_txt2)
export(short_names)
export(slma)
export(surf_cooc)
export(text_cooc)
export(tokenize)
export(tokens_merge)
export(tokens_merge_all)
export(tot_n_tokens)
export(trunc_at)
export(type_freq)
export(type_freqs)
export(type_names)
export(types)
export(types_merge)
export(types_merge_all)
export(write_assoc)
export(write_conc)
export(write_fnames)
export(write_freqlist)
export(write_tokens)
export(write_txt)
export(write_types)
export(xlim4ca)
export(ylim4ca)
export(zero_plus)
importFrom(Rcpp,evalCpp)
importFrom(Rcpp,sourceCpp)
importFrom(XML,xmlValue)
importFrom(ca,ca)
importFrom(crayon,bold)
importFrom(dplyr,bind_rows)
importFrom(dplyr,mutate)
importFrom(grDevices,rgb)
importFrom(graphics,par)
importFrom(readr,locale)
importFrom(readr,read_lines)
importFrom(readr,write_lines)
importFrom(stats,complete.cases)
importFrom(stats,fisher.test)
importFrom(stats,pchisq)
importFrom(stats,phyper)
importFrom(stats,pt)
importFrom(stats,qchisq)
importFrom(stats,sd)
importFrom(stringi,stri_pad_both)
importFrom(stringi,stri_pad_left)
importFrom(stringi,stri_pad_right)
importFrom(stringi,stri_unescape_unicode)
importFrom(stringr,str_sort)
importFrom(stringr,str_trim)
importFrom(stringr,str_trunc)
importFrom(tibble,as_tibble)
importFrom(tibble,tibble)
importFrom(tm,DirSource)
importFrom(tm,TermDocumentMatrix)
importFrom(tm,VCorpus)
importFrom(utils,type.convert)
importFrom(yaml,as.yaml)
importFrom(yaml,yaml.load)
useDynLib(mclm, .registration = TRUE)

